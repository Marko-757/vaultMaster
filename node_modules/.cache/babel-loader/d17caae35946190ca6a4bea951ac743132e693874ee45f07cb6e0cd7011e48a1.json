{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\OneDrive\\\\Documents\\\\GitHub\\\\vaultMaster\\\\src\\\\pages\\\\team_pw_manager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ManageRoles from \"../components/manageRoles\"; // Already moved to components\nimport MyMembers from \"../components/myMembers\"; // Newly created component\nimport PasswordAndFileManagement from \"../components/passwordAndFileManage\"; // Password and File Management component\nimport \"./team_pw_manager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamPwManager = () => {\n  _s();\n  const [teams, setTeams] = useState([\"My Company 1\", \"My Company 2\"]);\n  const [memberships, setMemberships] = useState([\"My Membership 1\", \"My Membership 2\"]);\n  const [selectedTeam, setSelectedTeam] = useState(teams[0]);\n  // Track which view is active: \"members\", \"roles\", \"password\", or null (default home)\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // States for inline team creation\n  const [showTeamInput, setShowTeamInput] = useState(false);\n  const [newTeamName, setNewTeamName] = useState(\"\");\n\n  // States for inline membership creation\n  const [showMembershipInput, setShowMembershipInput] = useState(false);\n  const [newMembershipName, setNewMembershipName] = useState(\"\");\n\n  // States for inline editing teams\n  const [editingTeamIndex, setEditingTeamIndex] = useState(null);\n  const [editingTeamName, setEditingTeamName] = useState(\"\");\n\n  // States for inline editing memberships\n  const [editingMembershipIndex, setEditingMembershipIndex] = useState(null);\n  const [editingMembershipName, setEditingMembershipName] = useState(\"\");\n\n  // \"employee\" data for \"My Members\"\n  const [employees] = useState([{\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Doe\",\n    email: \"john.doe@example.com\",\n    phone: \"123-456-7890\",\n    roles: \"Manager\",\n    photo: \"https://via.placeholder.com/50\"\n  }, {\n    id: 2,\n    firstName: \"Jane\",\n    lastName: \"Smith\",\n    email: \"jane.smith@example.com\",\n    phone: \"987-654-3210\",\n    roles: \"Developer\",\n    photo: \"https://via.placeholder.com/50\"\n  }]);\n\n  // Handle inline team input submission (for adding a new team)\n  const handleTeamInputKeyDown = e => {\n    if (e.key === \"Enter\") {\n      if (newTeamName.trim() !== \"\") {\n        const trimmedName = newTeamName.trim();\n        setTeams([...teams, trimmedName]);\n        setNewTeamName(\"\");\n        setShowTeamInput(false);\n      } else {\n        alert(\"Team name cannot be blank.\");\n      }\n    } else if (e.key === \"Escape\") {\n      setNewTeamName(\"\");\n      setShowTeamInput(false);\n    }\n  };\n\n  // Handle inline membership input submission (for adding a new membership)\n  const handleMembershipInputKeyDown = e => {\n    if (e.key === \"Enter\") {\n      if (newMembershipName.trim() !== \"\") {\n        const trimmedName = newMembershipName.trim();\n        setMemberships([...memberships, trimmedName]);\n        setNewMembershipName(\"\");\n        setShowMembershipInput(false);\n      } else {\n        alert(\"Membership name cannot be blank.\");\n      }\n    } else if (e.key === \"Escape\") {\n      setNewMembershipName(\"\");\n      setShowMembershipInput(false);\n    }\n  };\n\n  // Handle inline editing for teams\n  const handleEditingTeamKeyDown = (e, index) => {\n    if (e.key === \"Enter\") {\n      if (editingTeamName.trim() !== \"\") {\n        const updatedTeams = [...teams];\n        updatedTeams[index] = editingTeamName.trim();\n        setTeams(updatedTeams);\n        setEditingTeamIndex(null);\n        setEditingTeamName(\"\");\n      } else {\n        alert(\"Team name cannot be blank.\");\n      }\n    } else if (e.key === \"Escape\") {\n      setEditingTeamIndex(null);\n      setEditingTeamName(\"\");\n    }\n  };\n\n  // Handle inline editing for memberships\n  const handleEditingMembershipKeyDown = (e, index) => {\n    if (e.key === \"Enter\") {\n      if (editingMembershipName.trim() !== \"\") {\n        const updatedMemberships = [...memberships];\n        updatedMemberships[index] = editingMembershipName.trim();\n        setMemberships(updatedMemberships);\n        setEditingMembershipIndex(null);\n        setEditingMembershipName(\"\");\n      } else {\n        alert(\"Membership name cannot be blank.\");\n      }\n    } else if (e.key === \"Escape\") {\n      setEditingMembershipIndex(null);\n      setEditingMembershipName(\"\");\n    }\n  };\n\n  // Delete a team with confirmation\n  const deleteTeam = team => {\n    if (window.confirm(`Are you sure you want to delete \"${team}\"?`)) {\n      setTeams(teams.filter(t => t !== team));\n      if (selectedTeam === team) {\n        setSelectedTeam(teams.length > 1 ? teams[0] : null);\n      }\n    }\n  };\n\n  // Delete a membership with confirmation\n  const deleteMembership = membership => {\n    if (window.confirm(`Are you sure you want to delete \"${membership}\"?`)) {\n      setMemberships(memberships.filter(m => m !== membership));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teams-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teams-list-container\",\n          children: [teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-item\",\n            children: editingTeamIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"team-input\",\n              value: editingTeamName,\n              onChange: e => setEditingTeamName(e.target.value),\n              onKeyDown: e => handleEditingTeamKeyDown(e, index),\n              autoFocus: true,\n              onBlur: () => {\n                if (editingTeamName.trim() !== \"\") {\n                  const updatedTeams = [...teams];\n                  updatedTeams[index] = editingTeamName.trim();\n                  setTeams(updatedTeams);\n                }\n                setEditingTeamIndex(null);\n                setEditingTeamName(\"\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `team-button ${selectedTeam === team ? \"active\" : \"\"}`,\n              onClick: () => {\n                setSelectedTeam(team);\n                setSelectedOption(null); // Reset to home view\n              },\n              onDoubleClick: () => {\n                setEditingTeamIndex(index);\n                setEditingTeamName(team);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"team-name\",\n                children: team\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)), showTeamInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-item\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"team-input\",\n              value: newTeamName,\n              onChange: e => setNewTeamName(e.target.value),\n              onKeyDown: handleTeamInputKeyDown,\n              autoFocus: true,\n              placeholder: \"Enter new team name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: () => setShowTeamInput(true),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Memberships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memberships-list-container\",\n          children: [memberships.map((membership, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-item\",\n            children: editingMembershipIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"membership-input\",\n              value: editingMembershipName,\n              onChange: e => setEditingMembershipName(e.target.value),\n              onKeyDown: e => handleEditingMembershipKeyDown(e, index),\n              autoFocus: true,\n              onBlur: () => {\n                if (editingMembershipName.trim() !== \"\") {\n                  const updatedMemberships = [...memberships];\n                  updatedMemberships[index] = editingMembershipName.trim();\n                  setMemberships(updatedMemberships);\n                }\n                setEditingMembershipIndex(null);\n                setEditingMembershipName(\"\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"membership-button\",\n              onDoubleClick: () => {\n                setEditingMembershipIndex(index);\n                setEditingMembershipName(membership);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"team-name\",\n                children: membership\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)), showMembershipInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-item\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"membership-input\",\n              value: newMembershipName,\n              onChange: e => setNewMembershipName(e.target.value),\n              onKeyDown: handleMembershipInputKeyDown,\n              autoFocus: true,\n              placeholder: \"Enter new membership name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: () => setShowMembershipInput(true),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedOption === \"members\" ? /*#__PURE__*/_jsxDEV(MyMembers, {\n        employees: employees,\n        onBack: () => setSelectedOption(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this) : selectedOption === \"roles\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roles-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setSelectedOption(null),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ManageRoles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this) : selectedOption === \"password\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-file-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setSelectedOption(null),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PasswordAndFileManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedTeam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option-button\",\n            onClick: () => setSelectedOption(\"password\"),\n            children: \"Password and File Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option-button\",\n            onClick: () => setSelectedOption(\"members\"),\n            children: \"My Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option-button\",\n            onClick: () => setSelectedOption(\"roles\"),\n            children: \"Manage Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamPwManager, \"Dba9Dn4vzFK0NdYg+2oJM4HtEOY=\");\n_c = TeamPwManager;\nexport default TeamPwManager;\nvar _c;\n$RefreshReg$(_c, \"TeamPwManager\");","map":{"version":3,"names":["React","useState","ManageRoles","MyMembers","PasswordAndFileManagement","jsxDEV","_jsxDEV","TeamPwManager","_s","teams","setTeams","memberships","setMemberships","selectedTeam","setSelectedTeam","selectedOption","setSelectedOption","showTeamInput","setShowTeamInput","newTeamName","setNewTeamName","showMembershipInput","setShowMembershipInput","newMembershipName","setNewMembershipName","editingTeamIndex","setEditingTeamIndex","editingTeamName","setEditingTeamName","editingMembershipIndex","setEditingMembershipIndex","editingMembershipName","setEditingMembershipName","employees","id","firstName","lastName","email","phone","roles","photo","handleTeamInputKeyDown","e","key","trim","trimmedName","alert","handleMembershipInputKeyDown","handleEditingTeamKeyDown","index","updatedTeams","handleEditingMembershipKeyDown","updatedMemberships","deleteTeam","team","window","confirm","filter","t","length","deleteMembership","membership","m","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","target","onKeyDown","autoFocus","onBlur","onClick","onDoubleClick","placeholder","onBack","_c","$RefreshReg$"],"sources":["C:/Users/Julia/OneDrive/Documents/GitHub/vaultMaster/src/pages/team_pw_manager.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ManageRoles from \"../components/manageRoles\"; // Already moved to components\r\nimport MyMembers from \"../components/myMembers\"; // Newly created component\r\nimport PasswordAndFileManagement from \"../components/passwordAndFileManage\"; // Password and File Management component\r\nimport \"./team_pw_manager.css\";\r\n\r\nconst TeamPwManager = () => {\r\n  const [teams, setTeams] = useState([\"My Company 1\", \"My Company 2\"]);\r\n  const [memberships, setMemberships] = useState([\r\n    \"My Membership 1\",\r\n    \"My Membership 2\",\r\n  ]);\r\n  const [selectedTeam, setSelectedTeam] = useState(teams[0]);\r\n  // Track which view is active: \"members\", \"roles\", \"password\", or null (default home)\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  // States for inline team creation\r\n  const [showTeamInput, setShowTeamInput] = useState(false);\r\n  const [newTeamName, setNewTeamName] = useState(\"\");\r\n\r\n  // States for inline membership creation\r\n  const [showMembershipInput, setShowMembershipInput] = useState(false);\r\n  const [newMembershipName, setNewMembershipName] = useState(\"\");\r\n\r\n  // States for inline editing teams\r\n  const [editingTeamIndex, setEditingTeamIndex] = useState(null);\r\n  const [editingTeamName, setEditingTeamName] = useState(\"\");\r\n\r\n  // States for inline editing memberships\r\n  const [editingMembershipIndex, setEditingMembershipIndex] = useState(null);\r\n  const [editingMembershipName, setEditingMembershipName] = useState(\"\");\r\n\r\n  // \"employee\" data for \"My Members\"\r\n  const [employees] = useState([\r\n    {\r\n      id: 1,\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"john.doe@example.com\",\r\n      phone: \"123-456-7890\",\r\n      roles: \"Manager\",\r\n      photo: \"https://via.placeholder.com/50\",\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"Jane\",\r\n      lastName: \"Smith\",\r\n      email: \"jane.smith@example.com\",\r\n      phone: \"987-654-3210\",\r\n      roles: \"Developer\",\r\n      photo: \"https://via.placeholder.com/50\",\r\n    },\r\n  ]);\r\n\r\n  // Handle inline team input submission (for adding a new team)\r\n  const handleTeamInputKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (newTeamName.trim() !== \"\") {\r\n        const trimmedName = newTeamName.trim();\r\n        setTeams([...teams, trimmedName]);\r\n        setNewTeamName(\"\");\r\n        setShowTeamInput(false);\r\n      } else {\r\n        alert(\"Team name cannot be blank.\");\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      setNewTeamName(\"\");\r\n      setShowTeamInput(false);\r\n    }\r\n  };\r\n\r\n  // Handle inline membership input submission (for adding a new membership)\r\n  const handleMembershipInputKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (newMembershipName.trim() !== \"\") {\r\n        const trimmedName = newMembershipName.trim();\r\n        setMemberships([...memberships, trimmedName]);\r\n        setNewMembershipName(\"\");\r\n        setShowMembershipInput(false);\r\n      } else {\r\n        alert(\"Membership name cannot be blank.\");\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      setNewMembershipName(\"\");\r\n      setShowMembershipInput(false);\r\n    }\r\n  };\r\n\r\n  // Handle inline editing for teams\r\n  const handleEditingTeamKeyDown = (e, index) => {\r\n    if (e.key === \"Enter\") {\r\n      if (editingTeamName.trim() !== \"\") {\r\n        const updatedTeams = [...teams];\r\n        updatedTeams[index] = editingTeamName.trim();\r\n        setTeams(updatedTeams);\r\n        setEditingTeamIndex(null);\r\n        setEditingTeamName(\"\");\r\n      } else {\r\n        alert(\"Team name cannot be blank.\");\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      setEditingTeamIndex(null);\r\n      setEditingTeamName(\"\");\r\n    }\r\n  };\r\n\r\n  // Handle inline editing for memberships\r\n  const handleEditingMembershipKeyDown = (e, index) => {\r\n    if (e.key === \"Enter\") {\r\n      if (editingMembershipName.trim() !== \"\") {\r\n        const updatedMemberships = [...memberships];\r\n        updatedMemberships[index] = editingMembershipName.trim();\r\n        setMemberships(updatedMemberships);\r\n        setEditingMembershipIndex(null);\r\n        setEditingMembershipName(\"\");\r\n      } else {\r\n        alert(\"Membership name cannot be blank.\");\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      setEditingMembershipIndex(null);\r\n      setEditingMembershipName(\"\");\r\n    }\r\n  };\r\n\r\n  // Delete a team with confirmation\r\n  const deleteTeam = (team) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${team}\"?`)) {\r\n      setTeams(teams.filter((t) => t !== team));\r\n      if (selectedTeam === team) {\r\n        setSelectedTeam(teams.length > 1 ? teams[0] : null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Delete a membership with confirmation\r\n  const deleteMembership = (membership) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${membership}\"?`)) {\r\n      setMemberships(memberships.filter((m) => m !== membership));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"teams-container\">\r\n      {/* Left Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-section\">\r\n          <h2>My Teams</h2>\r\n          <div className=\"teams-list-container\">\r\n            {teams.map((team, index) => (\r\n              <div key={index} className=\"team-item\">\r\n                {editingTeamIndex === index ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"team-input\"\r\n                    value={editingTeamName}\r\n                    onChange={(e) => setEditingTeamName(e.target.value)}\r\n                    onKeyDown={(e) => handleEditingTeamKeyDown(e, index)}\r\n                    autoFocus\r\n                    onBlur={() => {\r\n                      if (editingTeamName.trim() !== \"\") {\r\n                        const updatedTeams = [...teams];\r\n                        updatedTeams[index] = editingTeamName.trim();\r\n                        setTeams(updatedTeams);\r\n                      }\r\n                      setEditingTeamIndex(null);\r\n                      setEditingTeamName(\"\");\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <button\r\n                    className={`team-button ${selectedTeam === team ? \"active\" : \"\"}`}\r\n                    onClick={() => {\r\n                      setSelectedTeam(team);\r\n                      setSelectedOption(null); // Reset to home view\r\n                    }}\r\n                    onDoubleClick={() => {\r\n                      setEditingTeamIndex(index);\r\n                      setEditingTeamName(team);\r\n                    }}\r\n                  >\r\n                    <span className=\"team-name\">{team}</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {showTeamInput ? (\r\n              <div className=\"team-item\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"team-input\"\r\n                  value={newTeamName}\r\n                  onChange={(e) => setNewTeamName(e.target.value)}\r\n                  onKeyDown={handleTeamInputKeyDown}\r\n                  autoFocus\r\n                  placeholder=\"Enter new team name\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"add-button-container\">\r\n                <button className=\"add-button\" onClick={() => setShowTeamInput(true)}>\r\n                  +\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"divider\" />\r\n\r\n        <div className=\"sidebar-section\">\r\n          <h2>My Memberships</h2>\r\n          <div className=\"memberships-list-container\">\r\n            {memberships.map((membership, index) => (\r\n              <div key={index} className=\"team-item\">\r\n                {editingMembershipIndex === index ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"membership-input\"\r\n                    value={editingMembershipName}\r\n                    onChange={(e) => setEditingMembershipName(e.target.value)}\r\n                    onKeyDown={(e) => handleEditingMembershipKeyDown(e, index)}\r\n                    autoFocus\r\n                    onBlur={() => {\r\n                      if (editingMembershipName.trim() !== \"\") {\r\n                        const updatedMemberships = [...memberships];\r\n                        updatedMemberships[index] = editingMembershipName.trim();\r\n                        setMemberships(updatedMemberships);\r\n                      }\r\n                      setEditingMembershipIndex(null);\r\n                      setEditingMembershipName(\"\");\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <button\r\n                    className=\"membership-button\"\r\n                    onDoubleClick={() => {\r\n                      setEditingMembershipIndex(index);\r\n                      setEditingMembershipName(membership);\r\n                    }}\r\n                  >\r\n                    <span className=\"team-name\">{membership}</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {showMembershipInput ? (\r\n              <div className=\"team-item\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"membership-input\"\r\n                  value={newMembershipName}\r\n                  onChange={(e) => setNewMembershipName(e.target.value)}\r\n                  onKeyDown={handleMembershipInputKeyDown}\r\n                  autoFocus\r\n                  placeholder=\"Enter new membership name\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"add-button-container\">\r\n                <button className=\"add-button\" onClick={() => setShowMembershipInput(true)}>\r\n                  +\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Area */}\r\n      <div className=\"main-content\">\r\n        {selectedOption === \"members\" ? (\r\n          <MyMembers employees={employees} onBack={() => setSelectedOption(null)} />\r\n        ) : selectedOption === \"roles\" ? (\r\n          <div className=\"roles-view\">\r\n            <div className=\"back-button-wrapper\">\r\n              <button className=\"back-button\" onClick={() => setSelectedOption(null)}>\r\n                Back\r\n              </button>\r\n            </div>\r\n            <ManageRoles />\r\n          </div>\r\n        ) : selectedOption === \"password\" ? (\r\n          <div className=\"password-file-view\">\r\n            <div className=\"back-button-wrapper\">\r\n              <button className=\"back-button\" onClick={() => setSelectedOption(null)}>\r\n                Back\r\n              </button>\r\n            </div>\r\n            <PasswordAndFileManagement />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>{selectedTeam}</h1>\r\n            <div className=\"options-container\">\r\n              <button className=\"option-button\" onClick={() => setSelectedOption(\"password\")}>\r\n                Password and File Management\r\n              </button>\r\n              <button className=\"option-button\" onClick={() => setSelectedOption(\"members\")}>\r\n                My Members\r\n              </button>\r\n              <button className=\"option-button\" onClick={() => setSelectedOption(\"roles\")}>\r\n                Manage Roles\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamPwManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}